// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using gifting_center.Data.Database;

#nullable disable

namespace giftingcenter.Data.Migrations
{
    [DbContext(typeof(PostgresSqlContext))]
    [Migration("20231004221049_UpdateUserRoleDb")]
    partial class UpdateUserRoleDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("gifting_center.Data.Database.Models.GiftCategoryDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GiftCategories");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.GiftDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<int>("GiftedUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<bool>("Reserved")
                        .HasColumnType("boolean");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GiftedUserId");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.GiftedUserDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GiftedUsers");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.UserDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("GiftedUserId")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GiftedUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.UserRoleDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserDbId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserDbId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.GiftDb", b =>
                {
                    b.HasOne("gifting_center.Data.Database.Models.GiftCategoryDb", "Category")
                        .WithMany("Gifts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gifting_center.Data.Database.Models.GiftedUserDb", "GiftedUser")
                        .WithMany("Gifts")
                        .HasForeignKey("GiftedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("GiftedUser");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.UserDb", b =>
                {
                    b.HasOne("gifting_center.Data.Database.Models.GiftedUserDb", "GiftedUser")
                        .WithMany()
                        .HasForeignKey("GiftedUserId");

                    b.OwnsOne("gifting_center.Data.Database.Models.RefreshTokenDb", "RefreshToken", b1 =>
                        {
                            b1.Property<Guid>("UserDbId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UserDbId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserDbId");
                        });

                    b.Navigation("GiftedUser");

                    b.Navigation("RefreshToken");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.UserRoleDb", b =>
                {
                    b.HasOne("gifting_center.Data.Database.Models.UserDb", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserDbId");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.GiftCategoryDb", b =>
                {
                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.GiftedUserDb", b =>
                {
                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("gifting_center.Data.Database.Models.UserDb", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
